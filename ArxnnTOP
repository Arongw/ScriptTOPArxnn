local j = loadstring(game:HttpGet("https://raw.githubusercontent.com/starlolq/lua-scripts/main/devilui", true))()
local k = j:CreateWindow("Mi Interfaz", "Descripción de mi juego")

-- Función para crear pestañas
local function CreateTab(tabName)
    return k:CreateTab(tabName)
end

-- Función para crear botones
local function CreateButton(tab, buttonName, onClick)
    return tab:CreateButton(buttonName, onClick)
end

-- Función para crear toggles
local function CreateToggle(tab, toggleName, onChange)
    return tab:CreateToggle(toggleName, onChange)
end

-- Pestaña para auto eat
local autoEatTab = CreateTab("Auto Eat")

autoeat_enabled = CreateToggle(autoEatTab, "Enabled", function(enabled)
    autoeat_enabled.Value = enabled
end)

autoeat_threshold = CreateButton(autoEatTab, "Threshold", function()
    -- Implementa aquí la lógica para cambiar el umbral de auto eat
end)

autoeat_foods = CreateButton(autoEatTab, "Foods", function()
    -- Implementa aquí la lógica para cambiar los alimentos de auto eat
end)

-- Pestaña para auto heal
local autoHealTab = CreateTab("Auto Heal")

autoheal_enabled = CreateToggle(autoHealTab, "Enabled", function(enabled)
    autoheal_enabled.Value = enabled
end)

autoheal_tosave = CreateButton(autoHealTab, "To Save", function()
    -- Implementa aquí la lógica para cambiar la cantidad a guardar para auto heal
end)

autoheal_rate = CreateButton(autoHealTab, "Rate", function()
    -- Implementa aquí la lógica para cambiar la tasa de auto heal
end)

autoheal_perhp = CreateButton(autoHealTab, "Blood Per HP", function()
    -- Implementa aquí la lógica para cambiar la cantidad de sangre por HP para auto heal
end)

-- Pestaña para teleports
local teleportsTab = CreateTab("Teleports")

teleports_bigvoid = CreateButton(teleportsTab, "Big Void", function()
    -- Implementa aquí la lógica para teleportar al Big Void
end)

teleports_smallvoid = CreateButton(teleportsTab, "Small Void", function()
    -- Implementa aquí la lógica para teleportar al Small Void
end)

-- Y así sucesivamente para los otros botones y toggles de teleports

-- Función para conectar la actualización del valor del toggle
local function ConnectToggleUpdate(toggle, setting)
    toggle:SetOn(auto[setting].Value)
    toggle:On("Changed", function(value)
        auto[setting].Value = value
    end)
end

-- Función para conectar la actualización del valor del botón
local function ConnectButtonUpdate(button, setting)
    button:On("Click", function()
        -- Aquí podrías abrir un diálogo para que el usuario pueda ingresar el valor
        -- Luego, actualizas el valor del setting con el valor ingresado
    end)
end

-- Conectar la actualización de los toggles y botones
ConnectToggleUpdate(autoeat_enabled, "Enabled")
ConnectButtonUpdate(autoeat_threshold, "Threshold")
ConnectButtonUpdate(autoeat_foods, "Foods")

ConnectToggleUpdate(autoheal_enabled, "Enabled")
ConnectButtonUpdate(autoheal_tosave, "To Save")
ConnectButtonUpdate(autoheal_rate, "Rate")
ConnectButtonUpdate(autoheal_perhp, "Blood Per HP")

-- Conectar los botones de teleports

-- Implementa la lógica para teleports y otras funciones aquí

-- Resto del script original

-- Crear la ventana ScreenGui
local window = Instance.new("ScreenGui")
window.Name = "Window"
window.Parent = game.Players.LocalPlayer.PlayerGui

-- Sección Auto Eat
local autoeat = utility:AddSection("Auto Eat")
autoeat_enabled = autoeat:AddSetting("Enabled", "Toggle")
autoeat_threshold = autoeat:AddSetting("Threshold", "Slider", 75, 0, 100, 0.1)
autoeat_foods = autoeat:AddSetting("Foods", "String", "Lemon, Cooked Meat")

-- Lógica Auto Eat
local lastate = 0
task.spawn(function()
    while window.ScreenGui.Parent do
        rs.RenderStepped:Wait()
        if autoeat_enabled.Value and tick() - lastate > 0.2 then
            local hunger = (statsgui.Food.Slider.AbsoluteSize.X / statsgui.Food.AbsoluteSize.X) * 100
            if hunger < autoeat_threshold.Value then
                for i, v in pairs(autoeat_foods.Value:split(",")) do
                    if getSlot(trim(v)) then
                        useSlot(getSlot(trim(v)))
                        lastate = tick()
                        break
                    end
                end
            end
        end
    end
end)

-- Sección Auto Heal
local autoheal = combat:AddSection("Auto Heal")
autoheal_enabled = autoheal:AddSetting("Enabled", "Toggle")
autoheal_tosave = autoheal:AddSetting("To Save", "Number", 500)
autoheal_rate = autoheal:AddSetting("Rate", "Number", 50)
autoheal_perhp = autoheal:AddSetting("Blood Per HP", "Number", 0.5)

-- Lógica Auto Heal
local lhp = hum and hum.Health or 100
local healcon
local tohealow = 0
local function hpchanged()
    local chp = hum.Health
    if chp > lhp then
        lhp = chp
        return
    end
    if isvoid and autoheal_enabled.Value then
        if getCount("Bloodfruit") <= autoheal_tosave.Value then
            return
        end
        if lhp > chp then
            local toheal = math.ceil((lhp - chp) / itemdata.Bloodfruit.nourishment.health)
            for i = 1, toheal do
                useSlot(getSlot("Bloodfruit"))
            end
            lhp = chp
        end
    end
    tohealow += lhp - chp
    lhp = chp
end
if hum then
    if healcon then
        healcon:Disconnect()
    end
    healcon = hum:GetPropertyChangedSignal("Health"):Connect(hpchanged)
end
plr.CharacterAdded:Connect(function(c)
    task.wait(0.5)
    healcon = hum:GetPropertyChangedSignal("Health"):Connect(hpchanged)
end)
local lastate = 0
task.spawn(function()
    while window.ScreenGui.Parent do
        rs.RenderStepped:Wait()
        if autoheal_enabled.Value and hum then
            if getCount("Bloodfruit") <= autoheal_tosave.Value then
                continue
            end
            if not isvoid then
                if tohealow > 0 and tick() - lastate > 1 / autoheal_rate.Value then
                    useSlot(getSlot("Bloodfruit"))
                    tohealow = math.clamp(tohealow - autoheal_perhp.Value, 0, 1000)
                    lastate = tick()
                end
            else
                -- Implementar lógica para curar en el vacío, si es necesario
            end
        end
    end
    healcon:Disconnect()
end)

-- Sección Teleports
local teleports = utility:AddSection("Teleports")
teleports_bigvoid = teleports:AddSetting("Big Void", "Button")
teleports:ConnectSettingUpdate("Big Void", function()
    local servers = getServers(11879754496).data
    local touse = {}
    for i, v in pairs(servers) do
        if v.playing > 25 then
            table.insert(touse, v.id)
        end
    end
    local bestid = #touse > 0 and touse[math.random(1, #touse)] or servers[1].id
    ts:TeleportToPlaceInstance(11879754496, bestid, plr)
end)
teleports_smallvoid = teleports:AddSetting("Small Void", "Button")
teleports:ConnectSettingUpdate("Small Void", function()
    local servers = getServers(11879754496).data
    local bestid = servers[#servers].id
    ts:TeleportToPlaceInstance(11879754496, bestid, plr)
end)
teleports_lowpingvoid = teleports:AddSetting("Low Ping Void", "Button")
teleports:ConnectSettingUpdate("Low Ping Void", function()
    local servers = getServers(11879754496).data
    local bestid
    local bestval = math.huge
    for i, v in pairs(servers) do
        if v.ping < bestval then
            bestid = v.id
        end
    end
    ts:TeleportToPlaceInstance(11879754496, bestid, plr)
end)
teleports_randomvoid = teleports:AddSetting("Random Void", "Button")
teleports:ConnectSettingUpdate("Random Void", function()
    local servers = getServers(11879754496).data
    local bestid = servers[math.random(1, #servers)].id
    while bestid == game.JobId do
        bestid = servers[math.random(1, #servers)].id
    end
    ts:TeleportToPlaceInstance(11879754496, bestid, plr)
end)

teleports_bigoverworld = teleports:AddSetting("Big Overworld", "Button")
teleports:ConnectSettingUpdate("Big Overworld", function()
    local servers = getServers(11729688377).data
    local touse = {}
    for i, v in pairs(servers) do
        if v.playing > 25 then
            table.insert(touse, v.id)
        end
    end
    local bestid = #touse > 0 and touse[math.random(1, #touse)] or servers[1].id
    ts:TeleportToPlaceInstance(11729688377, bestid, plr)
end)
teleports_smalloverworld = teleports:AddSetting("Small Overworld", "Button")
teleports:ConnectSettingUpdate("Small Overworld", function()
    local servers = getServers(11729688377).data
    local bestid = servers[#servers].id
    ts:TeleportToPlaceInstance(11729688377, bestid, plr)
end)
teleports_lowpingoverworld = teleports:AddSetting("Low Ping Overworld", "Button")
teleports:ConnectSettingUpdate("Low Ping Overworld", function()
    local servers = getServers(11729688377).data
    local bestid
    local bestval = math.huge
    for i, v in pairs(servers) do
        if v.ping < bestval then
            bestid = v.id
        end
    end
    ts:TeleportToPlaceInstance(11729688377, bestid, plr)
end)
teleports_randomoverworld = teleports:AddSetting("Random Overworld", "Button")
teleports:ConnectSettingUpdate("Random Overworld", function()
    local servers = getServers(11729688377).data
    local bestid = servers[math.random(1, #servers)].id
    while bestid == game.JobId do
        bestid = servers[math.random(1, #servers)].id
    end
    ts:TeleportToPlaceInstance(11729688377, bestid, plr)
end)

-- Sección Auto Plant
local autoplant = utility:AddSection("Auto Plant")
autoplant_enabled = autoplant:AddSetting("Enabled", "Toggle")
local function autoplant_farm()
    while window.ScreenGui.Parent do
        rs.RenderStepped:Wait()
        if autoplant_enabled.Value then
            -- Implementar lógica de siembra automática aquí
        end
    end
end
task.spawn(autoplant_farm)

-- Sección Auto Harvest
local autoharvest = utility:AddSection("Auto Harvest")
autoharvest_enabled = autoharvest:AddSetting("Enabled", "Toggle")
local function autoharvest_farm()
    while window.ScreenGui.Parent do
        rs.RenderStepped:Wait()
        if autoharvest_enabled.Value then
            -- Implementar lógica de cosecha automática aquí
        end
    end
end
task.spawn(autoharvest_farm)

-- Sección Place Plant Boxes
local placeplantboxes = utility:AddSection("Place Plant Boxes")
placeplantboxes_enabled = placeplantboxes:AddSetting("Enabled", "Toggle")
local function placeplantboxes_farm()
    while window.ScreenGui.Parent do
        rs.RenderStepped:Wait()
        if placeplantboxes_enabled.Value then
            -- Implementar lógica para colocar cajas de plantas aquí
        end
    end
end
task.spawn(placeplantboxes_farm)

-- Sección Auto Farm Plants
local autofarmplants = utility:AddSection("Auto Farm Plants")
autofarmplants_enabled = autofarmplants:AddSetting("Enabled", "Toggle")
local function autofarmplants_farm()
    while window.ScreenGui.Parent do
        rs.RenderStepped:Wait()
        if autofarmplants_enabled.Value then
            -- Implementar lógica para la agricultura automática aquí
        end
    end
end
task.spawn(autofarmplants_farm)

-- Sección Auto Press
local autopress = utility:AddSection("Auto Press")
autopress_enabled = autopress:AddSetting("Enabled", "Toggle")
autopress_time = autopress:AddSetting("Time", "Number", 1)
local function autopress_press()
    while window.ScreenGui.Parent do
        rs.RenderStepped:Wait()
        if autopress_enabled.Value then
            -- Implementar lógica de prensado automático aquí
        end
    end
end
task.spawn(autopress_press)

-- Sección Bird Farm
local birdfarm = utility:AddSection("Bird Farm")
birdfarm_enabled = birdfarm:AddSetting("Enabled", "Toggle")
local function birdfarm_farm()
    while window.ScreenGui.Parent do
        rs.RenderStepped:Wait()
        if birdfarm_enabled.Value then
            -- Implementar lógica para la cría de aves aquí
        end
    end
end
task.spawn(birdfarm_farm)
